#ifndef __ERRNO_H__
#define __ERRNO_H__

#define DEBUG   1

typedef enum {
        NCORE_ERR_OK = 0,
        NCORE_ERR_FAIL,
        NCORE_ERR_PARAM,
        NCORE_ERR_RCC,
        NCORE_ERR_EXTI,
        NCORE_ERR_BUFFER_ALLOC,
        NCORE_ERR_BUFFER_NULL,
        NCORE_ERR_RTC,
        NCORE_ERR_JSON,
        NCORE_ERR_METER_NOT_REGISTERED,
        NCORE_ERR_WATER_DATA_INSERT,
        NCORE_ERR_SYSLOG_NOT_INIT,
        NCORE_ERR_SYSLOG_MALLOC,
        NCORE_ERR_SYSLOG,
        NCORE_ERR_FIRMWARE_UPGRADE,
        NCORE_ERR_TFTP_NOTDEFINED,
        NCORE_ERR_TFTP_FILE_NOT_FOUND,
        NCORE_ERR_TFTP_UNKNOWN_TRANSFER_ID,
        NCORE_ERR_TFTP_ILLEGALOP,
        NCORE_ERR_TFTP_TIMEOUT,
        NCORE_ERR_FIRMWARE_OVERSIZE,
        NCORE_ERR_TFTP_SERVER_NOT_FOUND,
        NCORE_ERR_TFTP_CHECKSUM_ERROR,
        NCORE_ERR_DEV_SYNC,
        NCORE_ERR_MOBOX_FETCH_TIMEOUT,

        NCORE_ERR_SOCKET_CREATE,
        NCORE_ERR_SOCKET_BIND,
        NCORE_ERR_SOCKET_FCNTL_GET,
        NCORE_ERR_SOCKET_FCNTL_SET,
        NCORE_ERR_SOCKET_CONNECT,
        NCORE_ERR_SOCKET_OPT_GET,
        NCORE_ERR_SOCKET_OPT_SET,
        NCORE_ERR_SOCKET_TIMEOUT,
        NCORE_ERR_SOCKET_TIMEOUT_SELECT,
        NCORE_ERR_SOCKET_FAILED,
        NCORE_ERR_SOCKET_RECV_TIMEOUT,
        NCORE_ERR_SOCKET_IS_CLOSE,

        NCORE_ERR_MQTT_CONNECT,
        NCORE_ERR_MQTT_SUBSCRIBE,
        NCORE_ERR_MQTT_PUBLISH,
        NCORE_ERR_MQTT_READ_DATA_TIMEOUT,
        NCORE_ERR_MQTT_RECV_ALLOC_MEMORY,
        NCORE_ERR_MQTT_SEND,
        NCORE_ERR_MQTT_RECV_PEER_SOCKET_CLOSE,
        NCORE_ERR_MQTT_RECV_EAGAIN,
        NCORE_ERR_MQTT_RECV_EOTHER,
        NCORE_ERR_MQTT_PINGREQ,

        NCORE_ERR_HTTP_RESP_MSG,
        NCORE_ERR_HTTP_FAIL_MSG,
        NCORE_ERR_HTTP_DEV_SYNC,

        NCORE_ERR_FW_ENV_NOT_TERMINATED,
        NCORE_ERR_FW_ENV_OVERFLOW,
        NCORE_ERR_FW_ENV_END,
        NCORE_ERR_FW_ENV_STRING_SPLIT,

        NCORE_ERR_SPI_TXE_TIMEOUT,
        NCORE_ERR_SPI_RXNE_TIMEOUT,

        NCORE_ERR_LORA_INIT,
        NCORE_ERR_LORA_VERSION_READ,
        NCORE_ERR_LORA_CONFIG_READ,

        NCORE_ERR_FLASH_ERASE,
        NCORE_ERR_FLASH_PROGRAM_FAILED,
        NCORE_ERR_FLASH_PROGRAM_DATA_NOMATCH,
        NOCRE_ERR_FLASH_FAILED,

        NCORE_ERR_I2C_FAILED,
        NCORE_ERR_I2C_TIMEOUT,
        NCORE_ERR_I2C_SEND_START,
        NCORE_ERR_I2C_SEND_SLAVE_ADDR,
        NCORE_ERR_I2C_SEND_DATA,
        NCORE_ERR_I2C_BUSY,
} NCORE_RESULT_t;

#define NCORE_ERR_CB(err)       do { \
                printf("NCORE get error: %s (%s, %d)\r\n", #err, __func__, __LINE__); \
                return err; \
        } while (0)

#if DEBUG == 1
#define NCORE_ERR_DBG()         do { \
                printf("[%s, %d]\r\n", __func__, __LINE__); \
        } while (0)
#else
#define NCORE_ERR_DBG()
#endif

#endif /* __ERRNO_H__ */
